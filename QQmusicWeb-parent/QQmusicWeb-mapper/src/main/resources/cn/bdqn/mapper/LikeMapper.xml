<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bdqn.mapper.LikeMapper">
    <resultMap id="BaseResultMap" type="cn.bdqn.domain.Like">
        <id column="l_id" property="lId" jdbcType="INTEGER"/>
        <result column="l_uid" property="lUid" jdbcType="INTEGER"/>
        <result column="l_mid" property="lMid" jdbcType="INTEGER"/>
        <result column="l_sid" property="lSid" jdbcType="INTEGER"/>
        <result column="l_aid" property="lAid" jdbcType="INTEGER"/>
        <collection property="singgerList" ofType="cn.bdqn.domain.Singger">
            <result column="s_Id" property="sId"></result>
            <result column="s_name" property="sName"></result>
        </collection>
        <collection property="musicList" ofType="cn.bdqn.domain.Music">
            <result column="m_Id" property="mId"></result>
            <result column="m_name" property="mName"></result>
        </collection>
        <collection property="lbumList" ofType="cn.bdqn.domain.Lbum">
            <result column="a_id" property="aId"></result>
            <result column="a_name" property="aName"></result>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    l_id, l_uid, l_mid, l_sid, l_aid
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_like
        where l_id = #{lId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_like
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="cn.bdqn.domain.Like">
      insert into t_collect(c_uid,c_mid)
      VALUES(#{uesrId},#{musicId})
    </insert>

    <insert id="insertSelective" parameterType="cn.bdqn.domain.Like">
        insert into t_like
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lId != null">
                l_id,
            </if>
            <if test="lUid != null">
                l_uid,
            </if>
            <if test="lMid != null">
                l_mid,
            </if>
            <if test="lSid != null">
                l_sid,
            </if>
            <if test="lAid != null">
                l_aid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="lId != null">
                #{lId,jdbcType=INTEGER},
            </if>
            <if test="lUid != null">
                #{lUid,jdbcType=INTEGER},
            </if>
            <if test="lMid != null">
                #{lMid,jdbcType=INTEGER},
            </if>
            <if test="lSid != null">
                #{lSid,jdbcType=INTEGER},
            </if>
            <if test="lAid != null">
                #{lAid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.domain.Like">
        update t_like
        <set>
            <if test="lUid != null">
                l_uid = #{lUid,jdbcType=INTEGER},
            </if>
            <if test="lMid != null">
                l_mid = #{lMid,jdbcType=INTEGER},
            </if>
            <if test="lSid != null">
                l_sid = #{lSid,jdbcType=INTEGER},
            </if>
            <if test="lAid != null">
                l_aid = #{lAid,jdbcType=INTEGER},
            </if>
        </set>
        where l_id = #{lId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.bdqn.domain.Like">
    update t_like
    set l_uid = #{lUid,jdbcType=INTEGER},
      l_mid = #{lMid,jdbcType=INTEGER},
      l_sid = #{lSid,jdbcType=INTEGER},
      l_aid = #{lAid,jdbcType=INTEGER}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>


    <!--查询是否存在此歌曲-->
    <select id="queryByUidMidSid" resultType="java.lang.Integer" parameterType="cn.bdqn.domain.Like">
            select count(l_id) as num FROM t_like WHERE l_uid=#{lUid} AND l_mid=#{lMid} AND l_sid = #{lSid}
    </select>

    <!--新增like歌曲-->
    <insert id="addLikeMusic" parameterType="cn.bdqn.domain.Like">
        insert into t_like(l_uid,l_mid,l_sid,l_aid)
        VALUES(#{lUid},#{lMid},#{lSid},#{lAid})
    </insert>

    <!--查询所有喜欢列表-->
    <select id="queryLikeList" resultMap="BaseResultMap">
        select * from t_like
    </select>

    <!--根据用户id查询所有喜欢列表-->
    <select id="queryByUidLikeList" resultMap="BaseResultMap">
        SELECT m.m_name,s.s_name,a.a_name FROM t_like as l
    INNER JOIN t_music as m on l.l_mid=m.m_Id
    INNER JOIN t_singger as s on l.l_sid=s.s_Id
    INNER JOIN t_album as a on l.l_aid=a.a_id
    WHERE l.l_uid = #{lUid}
    </select>

</mapper>